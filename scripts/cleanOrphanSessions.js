const mongoose = require('mongoose');
const Session = require('../models/Session');
const Class = require('../models/Class');
require('dotenv').config();

const cleanOrphanSessions = async () => {
  try {
    // Connexion √† la base de donn√©es
    await mongoose.connect(process.env.MONGODB_URI);
    console.log('‚úÖ Connexion √† MongoDB √©tablie');

    // R√©cup√©rer toutes les s√©ances
    const sessions = await Session.find({});
    console.log(`üìä ${sessions.length} s√©ances trouv√©es`);

    let orphanCount = 0;
    const orphanSessions = [];

    // V√©rifier chaque s√©ance
    for (const session of sessions) {
      if (!session.class) {
        // S√©ance sans classe
        orphanSessions.push(session._id);
        orphanCount++;
        console.log(`‚ùå S√©ance orpheline trouv√©e: ${session._id} (pas de classe)`);
      } else {
        // V√©rifier si la classe existe encore
        const classExists = await Class.findById(session.class);
        if (!classExists) {
          orphanSessions.push(session._id);
          orphanCount++;
          console.log(`‚ùå S√©ance orpheline trouv√©e: ${session._id} (classe ${session.class} n'existe plus)`);
        }
      }
    }

    if (orphanCount === 0) {
      console.log('‚úÖ Aucune s√©ance orpheline trouv√©e');
    } else {
      console.log(`\n‚ö†Ô∏è  ${orphanCount} s√©ances orphelines d√©tect√©es`);
      console.log('Voulez-vous les supprimer ? (Tapez "oui" pour confirmer)');
      
      // Attendre la confirmation de l'utilisateur
      const readline = require('readline');
      const rl = readline.createInterface({
        input: process.stdin,
        output: process.stdout
      });

      rl.question('Confirmation: ', async (answer) => {
        if (answer.toLowerCase() === 'oui') {
          // Supprimer les s√©ances orphelines
          const result = await Session.deleteMany({ _id: { $in: orphanSessions } });
          console.log(`‚úÖ ${result.deletedCount} s√©ances orphelines supprim√©es`);
        } else {
          console.log('‚ùå Nettoyage annul√©');
        }
        
        rl.close();
        mongoose.connection.close();
        console.log('üîå Connexion ferm√©e');
      });
    }

  } catch (error) {
    console.error('‚ùå Erreur:', error);
    mongoose.connection.close();
  }
};

// Ex√©cuter le script
cleanOrphanSessions();